<template>
    <view>
        <Button :bindTap.sync="bindtap" plain="{{false}}" type="primary" size="mini">hhhhh</Button>
        <Actionsheet :actionClick="actionClick" :cancel="cancel" :cancelText="cancelText" :actions.sync="actions" :show.sync="show" />
        <Dialog :show.sync="isDialogShow" :handleMaskClick="hideDialog" :handleButtonClick="onButtonClick" :buttons.sync="buttons" />
        <Field :value.sync="fieldValue" placeholder="输入试试" :handleFieldChange="onFieldChange" title="时间" />
        <Steps type="vertical" :steps.sync="steps" />
        <icon1 type="new" style="color: #2ea7e0"/>
        <icon2 type="phone" />
        <icon3 type="location" />
        <Select :items.sync="selectItems" :checkedValue.sync="checkedValue"
            :handleSelectChange="handleSelectChange" activeColor="#ff4443"/>
    </view>
</template>

<script>
import wepy from 'wepy'
import Button from '../components/button/button'
import Actionsheet from '../components/actionsheet/actionsheet'
import Dialog from '../components/dialog/dialog'
import Field from '../components/field/field'
import Steps from '../components/steps/steps'
import Icon from '../components/icon/icon'
import Select from '../components/select/select'

export default class Index extends wepy.page {
    config = {
        navigationBarTitleText: 'test'
    }
    components = {
        Button,
        Actionsheet,
        Dialog,
        Field,
        Steps,
        icon1: Icon,
        icon2: Icon,
        icon3: Icon,
        Select
    }

    data = {
        bindtap(event) {
            console.log(event)
        },
        actions: [
            {
                name: '选项1',
                subname: '选项描述语1',
                loading: true
            },
            {
                name: '选项2',
                subname: '选项描述语2',
                loading: false
            },
            {
                name: '去分享',
                openType: 'share'
            }
        ],
        cancelText: '关闭 Action',
        show: false,
        cancel: () => {
            this.show = false
            this.$apply()
        },
        actionClick: event => {
            console.log(event)
        },
        isDialogShow: false,
        hideDialog: () => {
            this.isDialogShow = false
            this.$apply()
        },
        onButtonClick: event => {
            console.log(event)
            this.hideDialog()
        },
        buttons: [
            {
                // 按钮文案
                text: '现金支付',
                // 按钮文字颜色
                color: 'red',
                // 按钮类型，用于在 then 中接受点击事件时，判断是哪一个按钮被点击
                type: 'cash'
            },
            {
                text: '微信支付',
                color: '#3CC51F',
                type: 'wechat'
            },
            {
                text: '取消',
                type: 'cancel'
            }
        ],
        onFieldChange: event => {
            this.fieldValue = event.detail.value
            this.$apply()
        },
        fieldValue: '',
        steps: [
            {
                // 此步骤是否当前完成状态
                current: false,
                // 此步骤是否已经完成
                done: true,
                // 此步骤显示文案
                text: '步骤一',
                // 此步骤描述语
                desc: '10.01'
            },
            {
                done: true,
                current: false,
                text: '步骤二',
                desc: '10.02'
            },
            {
                done: true,
                current: true,
                text: '步骤三',
                desc: '10.03'
            }
        ],
        selectItems: [
            {
                value: '1',
                // 选项文案
                name: '选项一'
            },
            {
                value: '2',
                name: '选项二'
            }
        ],
        checkedValue: '1',
        activeColor: '#ff4443',
        handleSelectChange: (event) => {
            console.log(event)
            this.checkedValue = event.detail.value
            this.$apply()
        }
    }

    computed = {}

    methods = {}

    onLoad() {
        setTimeout(() => {
            this.show = true
            this.$apply()
            setTimeout(() => {
                this.isDialogShow = true
                this.$apply()
            }, 5000)
        }, 2000)
    }

    watch = {}
}
</script>
